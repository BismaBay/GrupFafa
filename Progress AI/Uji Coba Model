import cv2
import numpy as np
import joblib
from keras_facenet import FaceNet
from mtcnn import MTCNN
from google.colab.patches import cv2_imshow 

embedder = FaceNet()
detector = MTCNN()
clf = joblib.load("/content/drive/MyDrive/svm_multiclass_model.pkl")

# Path gambar uji
test_image_path = "/content/WIN_20250316_20_50_25_Pro - Copy.jpg"
image = cv2.imread(test_image_path)

if image is None:
    print("Gagal membaca gambar.")
else:
    faces = detector.detect_faces(image)
    if not faces:
        print("Tidak ada wajah terdeteksi.")
    else:
        for face in faces:
            x, y, w, h = face["box"]
            face_crop = image[y:y+h, x:x+w]

            try:
                face_rgb = cv2.cvtColor(face_crop, cv2.COLOR_BGR2RGB)
                face_resized = cv2.resize(face_rgb, (160, 160))
                embedding = embedder.embeddings([face_resized])[0]

                pred = clf.predict([embedding])[0]
                proba = clf.predict_proba([embedding])[0].max()

                if proba < 0.3:
                    label = "Tidak dikenal"
                else:
                    label = f"{pred}  ({proba:.2f})"

                print(f"Prediksi: {label}")
                cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2)
                cv2.putText(image, label, (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (255, 255, 255), 2)

            except Exception as e:
                print(f"Error saat proses embedding: {e}")

        cv2_imshow(image)
